#include <stdio.h>
#include <time.h>
int partition(int l, int h, int a[]) {
    int temp;
    int p = a[l];
    int i = l;
    int j = h;
    while (i < j) {
        while (a[i] <= p && i < h) {
            i++;
        }
        while (a[j] > p && j > l) {
            j--;
        }
        if (i < j) {
            temp = a[i];
            a[i] = a[j];
            a[j] = temp;
        }
    }
    temp = a[l];
    a[l] = a[j];
    a[j] = temp;
    return j;
}
void quicksort(int l, int h, int a[]) {
    if (l < h) {
        int j = partition(l, h, a);
        quicksort(l, j - 1, a);
        quicksort(j + 1, h, a);
    }
}
int main() {
    clock_t et, st;
    int a[10000], n, i;
    double time_taken;
    printf("Enter the number of elements\n");
    scanf("%d", &n);
    for (i = 0; i < n; i++) {
        a[i] = rand() % 10000;
    }
    printf("Array before sorting\n");
    for (i = 0; i < n; i++) {
        printf("%d\n", a[i]);
    }
    printf("\n");
    st = clock();
    quicksort(0, n - 1, a);
    et = clock();
    printf("Array after sorting\n");
    for (i = 0; i < n; i++) {
        printf("%d\n", a[i]);
    }
    printf("\n");
    time_taken = (double)(et - st) / CLOCKS_PER_SEC;
    printf("Time: %lf seconds\n", time_taken);
    return 0;
}